<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Supplychainsecurity on Rahul Bajaj</title>
    <link>https://journalctl.org/tags/supplychainsecurity/</link>
    <description>Recent content in Supplychainsecurity on Rahul Bajaj</description>
    <image>
      <title>Rahul Bajaj</title>
      <url>https://journalctl.org/images/papermod-cover.png</url>
      <link>https://journalctl.org/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.126.1</generator>
    <language>en</language>
    <lastBuildDate>Sat, 22 Jun 2024 10:29:34 -0400</lastBuildDate>
    <atom:link href="https://journalctl.org/tags/supplychainsecurity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unraveling the Complexities: Navigating OpenShiftâ€™s Compliance Operator</title>
      <link>https://journalctl.org/post/compliance-operator/</link>
      <pubDate>Sat, 22 Jun 2024 10:29:34 -0400</pubDate>
      <guid>https://journalctl.org/post/compliance-operator/</guid>
      <description>Introduction to the Compliance Operator The OpenShift Compliance Operator is all about keeping your OpenShift cluster secure and in line with governance policies. It does this by scanning both the OpenShift Platform 4 (ocp4) and Red Hat Core OS 4 (RHCOS4). Now, let&amp;rsquo;s break down the types of compliance checks it can handle:
Platform (Cluster) Related Checks: These checks use the OpenShift API to make sure everything is shipshape. Node Related Checks: These scans take a closer look at the filesystem of each node.</description>
    </item>
    <item>
      <title>Unlocking RHACS: Vulnerability Management and Workload Hardening Policies</title>
      <link>https://journalctl.org/post/rhacs/</link>
      <pubDate>Thu, 14 Mar 2024 08:59:28 -0400</pubDate>
      <guid>https://journalctl.org/post/rhacs/</guid>
      <description>Recently, I have been working on Red Hat Advanced Cluster Security (RHACS) to identify security vulnerabilities and implementing cluster hardening rules within OpenShift clusters. Inspired by my experiences, I decided to share my insights through this blog post. Join me as we delve into the world of RHACS and explore its functionality.
Introduction to RHACS Red Hat Advanced Cluster Security (RHACS) is the downstream project for the upstream Stackrox project. In other words, enhancements to the source code are initially made in Stackrox, and then they undergo testing and packaging to become part of RHACS.</description>
    </item>
    <item>
      <title>Enhancing Security: Using Renovate in Gitlab Pipelines for Automated Dependency Updates</title>
      <link>https://journalctl.org/post/renovate/</link>
      <pubDate>Thu, 21 Dec 2023 11:46:02 -0400</pubDate>
      <guid>https://journalctl.org/post/renovate/</guid>
      <description>Open Source Software (OSS) projects have been distributed in packages for decades. Using packages allows developers to focus on new feature implementation. Major software distributions, such as Fedora, Debian, etc, typically consist of thousands of packages. These packages depend on each other to perform tasks efficiently by avoiding code duplication. The inter-dependence amongst the packages creates a software supply chain.
Examples of software security principles such as using software binaries that are signed by the software vendor, keeping binaries regularly updated, and constantly monitoring software behaviour are general to any software system.</description>
    </item>
    <item>
      <title>Slimming Down Containers: The Art of Minimizing Image Bloat</title>
      <link>https://journalctl.org/post/lean-container-images/</link>
      <pubDate>Sat, 28 Oct 2023 12:00:59 -0500</pubDate>
      <guid>https://journalctl.org/post/lean-container-images/</guid>
      <description>Need for slimming down containers OpenShift, an enterprise-ready Kubernetes platform, offers a multitude of benefits. One such advantage is the Source-to-Image (S2I) build strategy, that simplifies the process of converting source code into deployable container images. This strategy enables developers to build container images without the need to define a container file explicitly. OpenShift clones the application&amp;rsquo;s source code into a builder image that utilizes builder scripts, ultimately generating a container image deployable within the cluster.</description>
    </item>
    <item>
      <title>Diving into the Open Source Ocean: A Recap of the Summit&#39;s Key Moments</title>
      <link>https://journalctl.org/post/ossna2023/</link>
      <pubDate>Fri, 19 May 2023 08:59:28 -0400</pubDate>
      <guid>https://journalctl.org/post/ossna2023/</guid>
      <description>From May 10th to 12th, the Vancouver Convention Center came alive with the Open Source Summit North America, a three-day event that brought together open source software enthusiasts from around the world. With a focus on exploring the newest trends and embracing opportunities in the ever-changing field of open source technology, this premier conference drew over two thousand attendees. In this blog post, we&amp;rsquo;ll dive into my own presentation and its key points, share some highlights from the inspiring talks I attended, and take a closer look at the exciting conversations and new discoveries that unfolded at the Red Hat booth.</description>
    </item>
  </channel>
</rss>
